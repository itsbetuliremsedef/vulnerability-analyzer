import helpers
import structure


# filter for exercise 2
def filter_dependencies_with_vulnerabilities(raw_dependencies_data):
    filtered_dependencies ={}

    for dependency in raw_dependencies_data:
        if helpers.json_key_v() in dependency.keys():
            index = structure.get_index(dependency)
            file_name_group = []

            if index in filtered_dependencies.keys():
                file_name_group.append(filtered_dependencies[index][0])
                file_name_group.append(dependency[helpers.json_key_file_name()])
            else:
                file_name_group.append(dependency[helpers.json_key_file_name()])
                filtered_dependencies[index] = file_name_group
    return filtered_dependencies


#  filter for exercise 3
def filter_as_severity_num_pair(raw_dependencies):

    count_dependencies = {}
    for dependency in raw_dependencies:
        if helpers.json_key_v() in dependency.keys():
            severity = dependency[helpers.json_key_v()][0][helpers.json_key_severity()].upper()

            if severity in count_dependencies.keys():
                count_dependencies[severity] = count_dependencies[severity] + 1
            else:
                count_dependencies[severity] = 1
    return count_dependencies
