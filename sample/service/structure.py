import helpers


### structure services
def get_index(dependency):
    return dependency[helpers.json_key_v()][0][helpers.json_key_name()].upper() \
         + helpers.json_splitter() + \
         dependency[helpers.json_key_v()][0][helpers.json_key_severity()].upper()


def extract_index(index_value, dependencies2):
    index_table = index_value.split(helpers.json_splitter())
    return {helpers.json_key_out_name(): index_table[0],
          helpers.json_key_severity(): index_table[1],
          helpers.json_key_out_file_names(): dependencies2[index_value]}


def structure_as_filter_sort_form(dependencies_with_vulnerabilities):
    structured_dependencies = []
    index = 0
    for index_value in dependencies_with_vulnerabilities:
        structured_dependencies.insert(
        index , extract_index(index_value, dependencies_with_vulnerabilities))
        index = index + 1

    return structured_dependencies


def structure_as_severity_count_pair(count_dependencies):
    structured_dependencies = []
    index = 0
    for severity in count_dependencies.keys():
        structured_dependencies.insert(index,
                                   {helpers.json_key_severity():severity,
                                    helpers.json_key_out_num_vul(): count_dependencies[severity]})
    return structured_dependencies