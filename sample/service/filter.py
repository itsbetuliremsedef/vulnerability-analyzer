import helpers
import logging


# filter services
def get_index(dependency):
  return dependency[helpers.json_key_v()][0][helpers.json_key_name()].upper() \
         + helpers.json_splitter() + \
         dependency[helpers.json_key_v()][0][helpers.json_key_severity()].upper()


def filter_dependencies_with_vulnerabilities(raw_dependencies_data):
    filtered_dependencies = {}

    try:
        for dependency in raw_dependencies_data:
            if helpers.json_key_v() in dependency.keys():
                index = get_index(dependency)
                file_name_group = []

                if index in filtered_dependencies.keys():
                    file_name_group.append(filtered_dependencies[index][0])
                    file_name_group.append(dependency[helpers.json_key_file_name()])
                else:
                    file_name_group.append(dependency[helpers.json_key_file_name()])
                    filtered_dependencies[index] = file_name_group

    except Exception as exception:
        logging.error("An error occurred due to unexpected data type:"
                      " {exception}".format(**exception.__cause__))

        raise Exception("An error occurred due to unexpected data type: {"
                        "exception}".format(**exception.__cause__))

    return filtered_dependencies


#  filter for exercise 3
def filter_as_severity_num_pair(raw_dependencies):

    try:
        count_dependencies = {}
        for dependency in raw_dependencies:
            if helpers.json_key_v() in dependency.keys():
               severity = dependency[helpers.json_key_v()][0][helpers.json_key_severity()].upper()

               if severity in count_dependencies.keys():
                   count_dependencies[severity] = count_dependencies[severity] + 1
               else:
                   count_dependencies[severity] = 1

    except Exception as exception:
        logging.error("An error occurred due to unexpected data type:"
                      " {exception}".format(**exception.__cause__))

        raise Exception("An error occurred due to unexpected data type: {"
                        "exception}".format(**exception.__cause__))

    return count_dependencies
