from flask import Flask, jsonify
from flask_restplus import Api, Resource
import helpers
import structure
import filter


app = Flask(__name__)
api = Api(app, default=helpers.api_def(),default_label=helpers.api_label())


@api.route(helpers.endpoint_exercise1())
class Exercise1(Resource):
    @staticmethod
    def get():
        definition = helpers.get_txt_data()
        return jsonify(definition)


@api.route(helpers.endpoint_exercise2())
class Exercise2(Resource):
    @staticmethod
    def get():
        # load json data
        data = helpers.get_json_data()

        # get dependencies raw data form json data
        raw_dependencies = data[helpers.json_key_file_deps()]

        # filter dependencies with vulnerabilities
        dependencies_with_vulnerabilities = filter.filter_dependencies_with_vulnerabilities(raw_dependencies)

        # structure it
        dependencies_filter_and_sort_form = structure.structure_as_filter_sort_form(dependencies_with_vulnerabilities)

        return dependencies_filter_and_sort_form


@api.route(helpers.endpoint_exercise3())
class Exercise3(Resource):
    @staticmethod
    def get():
        # load json data
        data = helpers.get_json_data()

        # get raw json data for dependencies
        raw_dependencies = data[helpers.json_key_file_deps()]

        # filter as pair
        count_dependencies = filter.filter_as_severity_num_pair(raw_dependencies)

        # structure it
        return structure.structure_as_severity_count_pair(count_dependencies)


app.run(host='0.0.0.0', port=5000)
