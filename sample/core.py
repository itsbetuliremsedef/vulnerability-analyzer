from flask import Flask
from flask_restplus import Api, Resource
import json
import helpers


app = Flask(__name__)
api = Api(app, default = helpers.api_def(),
          default_label = helpers.api_label())


def get_index(dependency):
    return dependency[helpers.json_key_v()][0][helpers.json_key_name()].upper()\
         + helpers.json_splitter() + \
         dependency[helpers.json_key_v()][0][helpers.json_key_severity()].upper()


def extract_index(index_value, dependencies2):
    index_table = index_value.split(helpers.json_splitter())
    return {helpers.json_key_out_name(): index_table[0],
          helpers.json_key_severity(): index_table[1],
          helpers.json_key_out_file_names(): dependencies2[index_value]}


@api.route(helpers.endpoint_exercise2())
class Exercise2(Resource):
  def get(self):
    file_text = open(helpers.json_file_path())
    data = json.load(file_text)

    raw_dependencies = data[helpers.json_key_file_deps()]
    filtered_dependencies ={}

    for dependency in raw_dependencies:
      if helpers.json_key_v() in dependency.keys():
        index = get_index(dependency)
        file_name_group = []
        if index in filtered_dependencies.keys():
          file_name_group.append(filtered_dependencies[index][0])
          file_name_group.append(dependency[helpers.json_key_file_name()])
        else:
          file_name_group.append(dependency[helpers.json_key_file_name()])
        filtered_dependencies[index] = file_name_group

    structured_dependencies = []
    index = 0

    for index_value in filtered_dependencies:
      structured_dependencies.insert(
          index , extract_index(index_value, filtered_dependencies))

      index = index+1

    return structured_dependencies


if __name__ == '__main__':
  app.run(debug=True)